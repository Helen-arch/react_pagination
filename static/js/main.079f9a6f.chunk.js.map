{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","pageValues","Pagination","total","currentPage","onPageChange","items","onNext","onPrev","isFirstPage","isLastPage","length","className","classNames","disabled","href","onClick","map","page","active","handlePaginationClick","item","App","useState","selectedPage","setSelectedPage","perPage","setPerPage","lastRendered","firstRendered","renderedItems","pages","Math","ceil","id","value","onChange","event","target","htmlFor","current","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,IAAMG,EAAa,CAAC,EAAG,EAAG,GAAI,I,uBCExBC,EAA8B,SAAC,GAQrC,IAPLC,EAOI,EAPJA,MAOI,IALJC,mBAKI,MALU,EAKV,EAJJC,EAII,EAJJA,aACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAC,EACI,EADJA,OAEMC,EAAcL,IAAgBD,EAAM,GACpCO,EAAaN,IAAgBD,EAAMA,EAAMQ,OAAS,GAQxD,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUL,IAAnD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,WACFP,GACHD,KAPN,oBAeDL,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQf,IAAgBc,IAF5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBApCS,SAACE,GACzBA,IAASd,GACXC,EAAaa,GAkCUE,CAAsBF,IAJvC,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHH,KAPN,uBAeJ,6BACGD,EAAMW,KAAI,SAACI,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1ErBC,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAeJ,EAAeE,GAVxB,GAWRF,EAAeE,EAXP,GAkBNG,GAJmBD,EAdb,GAeRA,EACAJ,EAAeE,GAEsBA,EAAU,EAE7CI,EAAgBnC,EAAWkC,EAAeD,GAC7CX,KAAI,SAAAlB,GAAC,qBAAYA,MAEdgC,EAAQpC,EAAW,EAAGqC,KAAKC,KAvBrB,GAuBkCP,IAC3CT,KAAI,SAAAlB,GAAC,OAAIA,KAeZ,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWY,EADX,mBACkCK,EADlC,cACqDD,EADrD,eA3CQ,GA2CR,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOT,EACPU,SA5BkB,SAACC,GAC3BV,IAAW,OAACU,QAAD,IAACA,OAAD,EAACA,EAAOC,OAAOH,QAC1BV,EAAgB,IAqBV,SAOGxB,EAAWgB,KAAI,SAAAkB,GAAK,OACnB,wBAAQA,MAAOA,EAAf,SACGA,GADwBA,UAOjC,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAO4B,EACPL,QAASA,EACTtB,YAAaoB,EACbnB,aAAc,SAACa,GAAD,OAAUO,EAAgBP,IACxCZ,MAAOwB,EACPvB,OA5CkB,WACtBkB,GAAgB,SAAAe,GAAO,OAAIA,EAAU,MA4CjChC,OAzCkB,WACtBiB,GAAgB,SAAAe,GAAO,OAAIA,EAAU,YCtCzCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.079f9a6f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const pageValues = [3, 5, 10, 20];\n","import classNames from 'classnames';\n\ntype Props = {\n  total: number[],\n  perPage: number,\n  currentPage?: number,\n  onPageChange: (arg0: number) => void,\n  items: string[],\n  onNext: () => void,\n  onPrev: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  // perPage,\n  currentPage = 1,\n  onPageChange,\n  items,\n  onNext,\n  onPrev,\n}) => {\n  const isFirstPage = currentPage === total[0];\n  const isLastPage = currentPage === total[total.length - 1];\n\n  const handlePaginationClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: isFirstPage })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => {\n              if (!isFirstPage) {\n                onPrev();\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {total.map(page => (\n          <li\n            className={classNames('page-item', {\n              active: currentPage === page,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePaginationClick(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames('page-item', { disabled: isLastPage })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => {\n              if (!isLastPage) {\n                onNext();\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, pageValues } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL = 42;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const items = getNumbers(1, TOTAL)\n//   .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const lastRendered = selectedPage * perPage <= TOTAL\n    ? selectedPage * perPage\n    : TOTAL;\n\n  const lastPageIdicator = lastRendered < TOTAL\n    ? lastRendered\n    : selectedPage * perPage;\n\n  const firstRendered = lastPageIdicator - perPage + 1;\n\n  const renderedItems = getNumbers(firstRendered, lastRendered)\n    .map(n => `Item ${n}`);\n\n  const pages = getNumbers(1, Math.ceil(TOTAL / perPage))\n    .map(n => n);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event?.target.value);\n    setSelectedPage(1);\n  };\n\n  const handleClickNext = () => {\n    setSelectedPage(current => current + 1);\n  };\n\n  const handleClickPrev = () => {\n    setSelectedPage(current => current - 1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstRendered} - ${lastRendered} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {pageValues.map(value => (\n              <option value={value} key={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={pages}\n        perPage={perPage}\n        currentPage={selectedPage}\n        onPageChange={(page) => setSelectedPage(page)}\n        items={renderedItems}\n        onNext={handleClickNext}\n        onPrev={handleClickPrev}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}